{"name":"Redis pool for Elixir lang","tagline":"Build on top of eredis and poolboy","body":"# RedisPool for Elixir\r\n[![Build Status](https://travis-ci.org/le0pard/redis_pool.png?branch=master)](https://travis-ci.org/le0pard/redis_pool)\r\n\r\nThis is redis pool for [Elixir](http://elixir-lang.org/). Build on top of [eredis](https://github.com/wooga/eredis) and [poolboy](https://github.com/devinus/poolboy).\r\n\r\n## Examples\r\n\r\nApplication start:\r\n\r\n```\r\nRedisPool.start\r\n```\r\nor add it in `application` section in mix:\r\n\r\n```\r\ndef application do\r\n  [mod: {Example, []},\r\n   applications: [ :redis_pool ] ]\r\nend\r\n```\r\n\r\n### Create pools\r\n\r\n```\r\nRedisPool.create_pool(:default, 10)\r\n\r\nRedisPool.create_pool(:test, 10, 'localhost', 6379)\r\n\r\nRedisPool.create_pool(:test2, 10, 'localhost', 6379, 0, 'password', 100)\r\n```\r\n\r\nAlso you can set enviroment variables to create pool, when application start:\r\n\r\n```\r\n{env, [\r\n        {pools, [\r\n                 {pool1, [\r\n                            {size, 30},\r\n                            {max_overflow, 20},\r\n                            {host, \"127.0.0.1\"},\r\n                            {port, 6379}\r\n                           ]},\r\n                 {pool2, [\r\n                            {size, 20},\r\n                            {max_overflow, 20},\r\n                            {host, \"127.0.0.1\"},\r\n                            {port, 6379},\r\n                            {database, \"user_db\"},\r\n                            {password, \"abc\"},\r\n                            {reconnect_sleep, 100}\r\n                           ]}\r\n                ]}\r\n      ]}\r\n```\r\n\r\n### Delete pools\r\n\r\n```\r\nRedisPool.delete_pool(:default)\r\n\r\nRedisPool.delete_pool(:test)\r\n```\r\n\r\n### Usage\r\n\r\nUsage of pools:\r\n\r\n```\r\nRedisPool.q({:global, :default}, [\"SET\", \"foo\", \"bar\"])\r\n\r\nRedisPool.q({:global, :test}, [\"GET\", \"foo\"])\r\n```\r\n\r\nMethod `transaction` is execute all redis command between `MULTI` and `EXEC` commands:\r\n\r\n```\r\nRedisPool.transaction {:global, :redis}, fn(redis) ->\r\n  :eredis.q redis, [\"SADD\", \"queues\", queue]\r\n  :eredis.q redis, [\"LPUSH\", \"queue\", \"Test\" ]\r\nend\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}